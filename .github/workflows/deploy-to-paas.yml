name: Deploy to PaaS

on:
  workflow_call:
    inputs:
      environment: { required: true, type: string }
      cf_space_name: { required: true, type: string }
      app_name: { required: false, type: string }
      url: { required: false, type: string }
      instances: { required: false, type: number, default: 1 }
      rolling_deployment: { required: false, type: boolean, default: false }
      use_stub_zendesk: { required: false, type: boolean, default: true }
    secrets:
      cf_username: { required: true }
      cf_password: { required: true }
      register_spreadsheet_id: { required: true }
      request_spreadsheet_id: { required: true }
      zendesk_api_token: { required: false }
      zendesk_group_id: { required: false }
      zendesk_username: { required: false }
    outputs:
      deployment_url:
        description: "The PaaS deployment URL"
        value: ${{ jobs.deploy.outputs.deployment_url }}

jobs:
  deploy:
    name: Deploy to PaaS
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.set_deployment_url.outputs.deployment_url }}
    outputs:
      deployment_url: ${{ steps.set_deployment_url.outputs.deployment_url }}
    steps:
      - name: Get distribution artifact
        uses: actions/download-artifact@v2
        with:
          name: product-pages

      - name: Install Cloud Foundry client
        env:
          CF_CLI_DOWNLOAD_URL: https://packages.cloudfoundry.org/stable?release=linux64-binary&source=github&version=v7
        run: |
          curl -sL ${CF_CLI_DOWNLOAD_URL} | sudo tar -zx -C /usr/local/bin
          cf version

      - name: Set deployment hostname
        id: set_deployment_hostname
        if: ${{ inputs.app_name != null }}
        run: |
          # Downcase the hostname and limit length to 63 characters as per PaaS requirements
          hostname=$(echo ${{ inputs.app_name }} | tr '[:upper:]' '[:lower:]' | tr '_' '-' | cut -c1-63)
          echo "::set-output name=hostname::${hostname}"

      - name: Set deployment URL
        id: set_deployment_url
        run: |
          url=${{ inputs.url }}
          hostname=${{ steps.set_deployment_hostname.outputs.hostname }}
          deployment_url=$([[ $url ]] && echo $url || echo "https://${hostname}.london.cloudapps.digital")
          echo "::set-output name=deployment_url::${deployment_url}"

      - name: PaaS login
        env:
          CF_API_URL: https://api.london.cloud.service.gov.uk
          CF_ORG_NAME: gds-digital-identity-onboarding
          CF_SPACE_NAME: ${{ inputs.cf_space_name }}
          CF_USERNAME: ${{ secrets.cf_username }}
          CF_PASSWORD: ${{ secrets.cf_password }}
        run: |
          cf api ${CF_API_URL}
          cf auth
          cf target -o ${CF_ORG_NAME} -s ${CF_SPACE_NAME}

      - name: Push to PaaS
        env:
          ROLLING_DEPLOYMENT: ${{ inputs.rolling_deployment }}
          ZENDESK_API_TOKEN: ${{ secrets.zendesk_api_token }}
          ZENDESK_GROUP_ID: ${{ secrets.zendesk_group_id }}
          ZENDESK_USERNAME: ${{ secrets.zendesk_username }}
        run: |
          cf push ${{ steps.set_deployment_hostname.outputs.hostname }} \
            --instances ${{ inputs.instances }} $([[ $ROLLING_DEPLOYMENT == "true" ]] && echo --strategy rolling) \
            --var register_spreadsheet_id=${{ secrets.register_spreadsheet_id }} \
            --var request_spreadsheet_id=${{ secrets.request_spreadsheet_id }} \
            --var use_stub_zendesk=${{ inputs.use_stub_zendesk }} \
            --var zendesk_api_token="${ZENDESK_API_TOKEN:- }" \
            --var zendesk_group_id="${ZENDESK_GROUP_ID:- }" \
            --var zendesk_username="${ZENDESK_USERNAME:- }"
